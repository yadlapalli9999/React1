{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.7\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : window.Popper = factory();\n})(this, function () {\n  'use strict';\n\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  var supportsMicroTasks = isBrowser && window.Promise;\n  /**\n  * Create a debounced version of a method, that's asynchronously deferred\n  * but called in the minimum time possible.\n  *\n  * @method\n  * @memberof Popper.Utils\n  * @argument {Function} fn\n  * @returns {Function}\n  */\n\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n  /**\n   * Check if the given variable is a function\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Any} functionToCheck - variable to check\n   * @returns {Boolean} answer to: is a function?\n   */\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n  /**\n   * Get CSS computed property of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Eement} element\n   * @argument {String} property\n   */\n\n\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    } // NOTE: 1 DOM access here\n\n\n    var window = element.ownerDocument.defaultView;\n    var css = window.getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n  /**\n   * Returns the parentNode or the host of the element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} parent\n   */\n\n\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n\n    return element.parentNode || element.host;\n  }\n  /**\n   * Returns the scrolling parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} scroll parent\n   */\n\n\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n\n      case '#document':\n        return element.body;\n    } // Firefox want us to check `-x` and `-y` variations as well\n\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n        overflow = _getStyleComputedProp.overflow,\n        overflowX = _getStyleComputedProp.overflowX,\n        overflowY = _getStyleComputedProp.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n  }\n\n  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n  var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n  /**\n   * Determines if the browser is Internet Explorer\n   * @method\n   * @memberof Popper.Utils\n   * @param {Number} version to check\n   * @returns {Boolean} isIE\n   */\n\n  function isIE(version) {\n    if (version === 11) {\n      return isIE11;\n    }\n\n    if (version === 10) {\n      return isIE10;\n    }\n\n    return isIE11 || isIE10;\n  }\n  /**\n   * Returns the offset parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} offset parent\n   */\n\n\n  function getOffsetParent(element) {\n    if (!element) {\n      return document.documentElement;\n    }\n\n    var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n    var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\n      offsetParent = (element = element.nextElementSibling).offsetParent;\n    }\n\n    var nodeName = offsetParent && offsetParent.nodeName;\n\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return element ? element.ownerDocument.documentElement : document.documentElement;\n    } // .offsetParent will return the closest TH, TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n\n\n    if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n\n    return offsetParent;\n  }\n\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY') {\n      return false;\n    }\n\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n  /**\n   * Finds the root node (document, shadowDOM root) of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} node\n   * @returns {Element} root node\n   */\n\n\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n\n    return node;\n  }\n  /**\n   * Finds the offset parent common to the two provided nodes\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element1\n   * @argument {Element} element2\n   * @returns {Element} common offset parent\n   */\n\n\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1; // Get common ancestor container\n\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n\n      return getOffsetParent(commonAncestorContainer);\n    } // one of the nodes is inside shadowDOM, find which one\n\n\n    var element1root = getRoot(element1);\n\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n  /**\n   * Gets the scroll value of the given element in the given side (top and left)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {String} side `top` or `left`\n   * @returns {number} amount of scrolled pixels\n   */\n\n\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n  }\n  /*\n   * Sum or subtract the element scroll values (left and top) from a given rect object\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} rect - Rect object you want to change\n   * @param {HTMLElement} element - The element from the function reads the scroll values\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n   * @return {Object} rect - The modifier rect object\n   */\n\n\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n  /*\n   * Helper to detect borders of a given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {CSSStyleDeclaration} styles\n   * Result of `getStyleComputedProperty` on the given element\n   * @param {String} axis - `x` or `y`\n   * @return {number} borders - The borders size of the given axis\n   */\n\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n  }\n\n  function getWindowSizes(document) {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE(10) && getComputedStyle(html);\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  /**\n   * Given element offsets, generate an output similar to getBoundingClientRect\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} offsets\n   * @returns {Object} ClientRect like output\n   */\n\n\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n  /**\n   * Get bounding client rect of given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} element\n   * @return {Object} client rect\n   */\n\n\n  function getBoundingClientRect(element) {\n    var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n\n    try {\n      if (isIE(10)) {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } else {\n        rect = element.getBoundingClientRect();\n      }\n    } catch (e) {}\n\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    }; // subtract scrollbar size from sizes\n\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n\n    return getClientRect(result);\n  }\n\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var isIE10 = isIE(10);\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n    if (fixedPosition && isHTML) {\n      parentRect.top = Math.max(parentRect.top, 0);\n      parentRect.left = Math.max(parentRect.left, 0);\n    }\n\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n\n    return offsets;\n  }\n\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n    return getClientRect(offset);\n  }\n  /**\n   * Check if the given element is fixed or is inside a fixed parent\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {Element} customContainer\n   * @returns {Boolean} answer to \"isFixed?\"\n   */\n\n\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n\n    var parentNode = getParentNode(element);\n\n    if (!parentNode) {\n      return false;\n    }\n\n    return isFixed(parentNode);\n  }\n  /**\n   * Finds the first parent of an element that has a transformed property defined\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} first transformed parent or documentElement\n   */\n\n\n  function getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n      return document.documentElement;\n    }\n\n    var el = element.parentElement;\n\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n      el = el.parentElement;\n    }\n\n    return el || document.documentElement;\n  }\n  /**\n   * Computed the boundaries limits and return them\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} popper\n   * @param {HTMLElement} reference\n   * @param {number} padding\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n   * @param {Boolean} fixedPosition - Is in fixed position mode\n   * @returns {Object} Coordinates of the boundaries\n   */\n\n\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n    var boundaries = {\n      top: 0,\n      left: 0\n    };\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case\n\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n            height = _getWindowSizes.height,\n            width = _getWindowSizes.width;\n\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    } // Add paddings\n\n\n    padding = padding || 0;\n    var isPaddingNumber = typeof padding === 'number';\n    boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n    boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n    return boundaries;\n  }\n\n  function getArea(_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return width * height;\n  }\n  /**\n   * Utility used to transform the `auto` placement to the placement with more\n   * available space.\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n    var variation = placement.split('-')[1];\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n  /**\n   * Get offsets to the reference element\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} state\n   * @param {Element} popper - the popper element\n   * @param {Element} reference - the reference element (the popper will be relative to this)\n   * @param {Element} fixedPosition - is in fixed position mode\n   * @returns {Object} An object containing the offsets which will be applied to the popper\n   */\n\n\n  function getReferenceOffsets(state, popper, reference) {\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n  }\n  /**\n   * Get the outer sizes of the given element (offset size + margins)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Object} object containing width and height properties\n   */\n\n\n  function getOuterSizes(element) {\n    var window = element.ownerDocument.defaultView;\n    var styles = window.getComputedStyle(element);\n    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n  /**\n   * Get the opposite placement of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement\n   * @returns {String} flipped placement\n   */\n\n\n  function getOppositePlacement(placement) {\n    var hash = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n  /**\n   * Get offsets to the popper\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} position - CSS position the Popper will get applied\n   * @param {HTMLElement} popper - the popper element\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n   * @param {String} placement - one of the valid placement options\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n   */\n\n\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0]; // Get popper node sizes\n\n    var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    }; // depending by the popper placement we have to compute its offsets slightly differently\n\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n  }\n  /**\n   * Mimics the `find` method of Array\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n\n\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    } // use `filter` to obtain the same behavior of `find`\n\n\n    return arr.filter(check)[0];\n  }\n  /**\n   * Return the index of the matching object\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n\n\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n  /**\n   * Loop trough the list of modifiers and run them in order,\n   * each of them will then edit the data object.\n   * @method\n   * @memberof Popper.Utils\n   * @param {dataObject} data\n   * @param {Array} modifiers\n   * @param {String} ends - Optional modifier name used as stopper\n   * @returns {dataObject}\n   */\n\n\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n        data = fn(data, modifier);\n      }\n    });\n    return data;\n  }\n  /**\n   * Updates the position of the popper, computing the new offsets and applying\n   * the new style.<br />\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    }; // compute reference element offsets\n\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n    data.originalPlacement = data.placement;\n    data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n    data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n  /**\n   * Helper used to know if the given modifier is enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @returns {Boolean}\n   */\n\n\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n          enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n  /**\n   * Get the prefixed supported property name\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} property (camelCase)\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n   */\n\n\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Destroys the popper.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function destroy() {\n    this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style.left = '';\n      this.popper.style.right = '';\n      this.popper.style.bottom = '';\n      this.popper.style.willChange = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n\n    return this;\n  }\n  /**\n   * Get the window associated with the element\n   * @argument {Element} element\n   * @returns {Window}\n   */\n\n\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, {\n      passive: true\n    });\n\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n\n    scrollParents.push(target);\n  }\n  /**\n   * Setup needed event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n\n\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, {\n      passive: true\n    }); // Scroll event listener on scroll parents\n\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n    return state;\n  }\n  /**\n   * It will add resize/scroll events and start recalculating\n   * position of the popper element when they are triggered.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n  /**\n   * Remove event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n\n\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    }); // Reset state\n\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n  /**\n   * It will remove resize/scroll events and won't recalculate popper position\n   * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n   * unless you call `update` method manually.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n  /**\n   * Tells if a given input is a number\n   * @method\n   * @memberof Popper.Utils\n   * @param {*} input to check\n   * @return {Boolean}\n   */\n\n\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  /**\n   * Set the style to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the style to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n\n\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = ''; // add unit if the value is numeric and is one of the following\n\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n  /**\n   * Set the attributes to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the attributes to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n\n\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The same data object\n   */\n\n\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n\n    setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n\n    return data;\n  }\n  /**\n   * Set the x-placement attribute before everything else because it could be used\n   * to add margins to the popper margins needs to be calculated to get the\n   * correct popper offsets.\n   * @method\n   * @memberof Popper.modifiers\n   * @param {HTMLElement} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper\n   * @param {Object} options - Popper.js options\n   */\n\n\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n    popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n\n    setStyles(popper, {\n      position: options.positionFixed ? 'fixed' : 'absolute'\n    });\n    return options;\n  }\n  /**\n   * @function\n   * @memberof Popper.Utils\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n   * @returns {Object} The popper's position offsets rounded\n   *\n   * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n   * good as it can be within reason.\n   * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n   *\n   * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n   * as well on High DPI screens).\n   *\n   * Firefox prefers no rounding for positioning and does not have blurriness on\n   * high DPI screens.\n   *\n   * Only horizontal placement and left/right values need to be considered.\n   */\n\n\n  function getRoundedOffsets(data, shouldRound) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var round = Math.round,\n        floor = Math.floor;\n\n    var noRound = function noRound(v) {\n      return v;\n    };\n\n    var referenceWidth = round(reference.width);\n    var popperWidth = round(popper.width);\n    var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n    var isVariation = data.placement.indexOf('-') !== -1;\n    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n    var verticalToInteger = !shouldRound ? noRound : round;\n    return {\n      left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n      top: verticalToInteger(popper.top),\n      bottom: verticalToInteger(popper.bottom),\n      right: horizontalToInteger(popper.right)\n    };\n  }\n\n  var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n  function computeStyle(data, options) {\n    var x = options.x,\n        y = options.y;\n    var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n    var styles = {\n      position: popper.position\n    };\n    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n\n    var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n\n    var left = void 0,\n        top = void 0;\n\n    if (sideA === 'bottom') {\n      // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n      // and not the bottom of the html element\n      if (offsetParent.nodeName === 'HTML') {\n        top = -offsetParent.clientHeight + offsets.bottom;\n      } else {\n        top = -offsetParentRect.height + offsets.bottom;\n      }\n    } else {\n      top = offsets.top;\n    }\n\n    if (sideB === 'right') {\n      if (offsetParent.nodeName === 'HTML') {\n        left = -offsetParent.clientWidth + offsets.right;\n      } else {\n        left = -offsetParentRect.width + offsets.right;\n      }\n    } else {\n      left = offsets.left;\n    }\n\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    } // Attributes\n\n\n    var attributes = {\n      'x-placement': data.placement\n    }; // Update `data` attributes, styles and arrowStyles\n\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n    return data;\n  }\n  /**\n   * Helper used to know if the given modifier depends from another one.<br />\n   * It checks if the needed modifier is listed and enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @param {Array} modifiers - list of modifiers\n   * @param {String} requestingName - name of requesting modifier\n   * @param {String} requestedName - name of requested modifier\n   * @returns {Boolean}\n   */\n\n\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n\n    return isRequired;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function arrow(data, options) {\n    var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n\n    var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjunction\n    //\n    // top/left side\n\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    } // bottom/right side\n\n\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n\n    data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n    return data;\n  }\n  /**\n   * Get the opposite placement variation of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement variation\n   * @returns {String} flipped placement variation\n   */\n\n\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n\n    return variation;\n  }\n  /**\n   * List of accepted placements to use as values of the `placement` option.<br />\n   * Valid placements are:\n   * - `auto`\n   * - `top`\n   * - `right`\n   * - `bottom`\n   * - `left`\n   *\n   * Each placement can have a variation from this list:\n   * - `-start`\n   * - `-end`\n   *\n   * Variations are interpreted easily if you think of them as the left to right\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n   * is right.<br />\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n   *\n   * Some valid examples are:\n   * - `top-end` (on top of reference, right aligned)\n   * - `right-start` (on right of reference, top aligned)\n   * - `bottom` (on bottom, centered)\n   * - `auto-end` (on the side with more space available, alignment depends by placement)\n   *\n   * @static\n   * @type {Array}\n   * @enum {String}\n   * @readonly\n   * @method placements\n   * @memberof Popper\n   */\n\n\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\n  var validPlacements = placements.slice(3);\n  /**\n   * Given an initial placement, returns all the subsequent placements\n   * clockwise (or counter-clockwise).\n   *\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement - A valid placement (it accepts variations)\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n   * @returns {Array} placements including their variations\n   */\n\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n    var flipOrder = [];\n\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n\n      default:\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n\n        data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n  }\n  /**\n   * Converts a string containing value + unit into a px value number\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} str - Value + unit string\n   * @argument {String} measurement - `height` or `width`\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @returns {Number|String}\n   * Value in pixels, or original string if no values were extracted\n   */\n\n\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2]; // If it's not a number it's an operator, I guess\n\n    if (!value) {\n      return str;\n    }\n\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n  /**\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} offset\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @argument {String} basePlacement\n   * @returns {Array} a two cells array with x and y offsets in numbers\n   */\n\n\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    }); // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    } // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n\n\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, []) // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    }); // Loop trough the offsets arrays and execute the operations\n\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @argument {Number|String} options.offset=0\n   * The offset value as described in the modifier description\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n        _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var basePlacement = placement.split('-')[0];\n    var offsets = void 0;\n\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n\n    data.popper = popper;\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    } // NOTE: DOM access here\n    // resets the popper's position so that the document size can be calculated excluding\n    // the size of the popper element itself\n\n\n    var transformProp = getSupportedPropertyName('transform');\n    var popperStyles = data.instance.popper.style; // assignment to help minification\n\n    var top = popperStyles.top,\n        left = popperStyles.left,\n        transform = popperStyles[transformProp];\n    popperStyles.top = '';\n    popperStyles.left = '';\n    popperStyles[transformProp] = '';\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n\n    popperStyles.top = top;\n    popperStyles.left = left;\n    popperStyles[transformProp] = transform;\n    options.boundaries = boundaries;\n    var order = options.priority;\n    var popper = data.offsets.popper;\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n\n        return defineProperty({}, mainSide, value);\n      }\n    };\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n    data.offsets.popper = popper;\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n          reference = _data$offsets.reference,\n          popper = _data$offsets.popper;\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n    return data;\n  }\n  /**\n   * Modifier function, each modifier can have a function of this type assigned\n   * to its `fn` property.<br />\n   * These functions will be called on each update, this means that you must\n   * make sure they are performant enough to avoid performance bottlenecks.\n   *\n   * @function ModifierFn\n   * @argument {dataObject} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {dataObject} The data object, properly modified\n   */\n\n  /**\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n   * needed by the library.\n   *\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n   * All the other properties are configurations that could be tweaked.\n   * @namespace modifiers\n   */\n\n\n  var modifiers = {\n    /**\n     * Modifier used to shift the popper on the start or end of its reference\n     * element.<br />\n     * It will read the variation of the `placement` property.<br />\n     * It can be one either `-end` or `-start`.\n     * @memberof modifiers\n     * @inner\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n\n    /**\n     * The `offset` modifier can shift your popper on both its axis.\n     *\n     * It accepts the following units:\n     * - `px` or unit-less, interpreted as pixels\n     * - `%` or `%r`, percentage relative to the length of the reference element\n     * - `%p`, percentage relative to the length of the popper element\n     * - `vw`, CSS viewport width unit\n     * - `vh`, CSS viewport height unit\n     *\n     * For length is intended the main axis relative to the placement of the popper.<br />\n     * This means that if the placement is `top` or `bottom`, the length will be the\n     * `width`. In case of `left` or `right`, it will be the `height`.\n     *\n     * You can provide a single value (as `Number` or `String`), or a pair of values\n     * as `String` divided by a comma or one (or more) white spaces.<br />\n     * The latter is a deprecated method because it leads to confusion and will be\n     * removed in v2.<br />\n     * Additionally, it accepts additions and subtractions between different units.\n     * Note that multiplications and divisions aren't supported.\n     *\n     * Valid examples are:\n     * ```\n     * 10\n     * '10%'\n     * '10, 10'\n     * '10%, 10'\n     * '10 + 10%'\n     * '10 - 5vh + 3%'\n     * '-10px + 5vh, 5px - 6%'\n     * ```\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n     * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: offset,\n\n      /** @prop {Number|String} offset=0\n       * The offset value as described in the modifier description\n       */\n      offset: 0\n    },\n\n    /**\n     * Modifier used to prevent the popper from being positioned outside the boundary.\n     *\n     * A scenario exists where the reference itself is not within the boundaries.<br />\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n     * In this case we need to decide whether the popper should either:\n     *\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\n     * - if it should ignore the boundary and \"escape with its reference\"\n     *\n     * When `escapeWithReference` is set to`true` and reference is completely\n     * outside its boundaries, the popper will overflow (or completely leave)\n     * the boundaries in order to remain attached to the edge of the reference.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n\n      /**\n       * @prop {Array} [priority=['left','right','top','bottom']]\n       * Popper will try to prevent overflow following these priorities by default,\n       * then, it could overflow on the left and on top of the `boundariesElement`\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n\n      /**\n       * @prop {number} padding=5\n       * Amount of pixel used to define a minimum distance between the boundaries\n       * and the popper. This makes sure the popper always has a little padding\n       * between the edges of its container\n       */\n      padding: 5,\n\n      /**\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\n       * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n       * `viewport` or any DOM element.\n       */\n      boundariesElement: 'scrollParent'\n    },\n\n    /**\n     * Modifier used to make sure the reference and its popper stay near each other\n     * without leaving any gap between the two. Especially useful when the arrow is\n     * enabled and you want to ensure that it points to its reference element.\n     * It cares only about the first axis. You can still have poppers with margin\n     * between the popper and its reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n\n    /**\n     * This modifier is used to move the `arrowElement` of the popper to make\n     * sure it is positioned between the reference element and its popper element.\n     * It will read the outer size of the `arrowElement` node to detect how many\n     * pixels of conjunction are needed.\n     *\n     * It has no effect if no `arrowElement` is provided.\n     * @memberof modifiers\n     * @inner\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: arrow,\n\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n\n    /**\n     * Modifier used to flip the popper's placement when it starts to overlap its\n     * reference element.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     *\n     * **NOTE:** this modifier will interrupt the current update cycle and will\n     * restart it if it detects the need to flip the placement.\n     * @memberof modifiers\n     * @inner\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: flip,\n\n      /**\n       * @prop {String|Array} behavior='flip'\n       * The behavior used to change the popper's placement. It can be one of\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n       * placements (with optional variations)\n       */\n      behavior: 'flip',\n\n      /**\n       * @prop {number} padding=5\n       * The popper will flip if it hits the edges of the `boundariesElement`\n       */\n      padding: 5,\n\n      /**\n       * @prop {String|HTMLElement} boundariesElement='viewport'\n       * The element which will define the boundaries of the popper position.\n       * The popper will never be placed outside of the defined boundaries\n       * (except if `keepTogether` is enabled)\n       */\n      boundariesElement: 'viewport'\n    },\n\n    /**\n     * Modifier used to make the popper flow toward the inner of the reference element.\n     * By default, when this modifier is disabled, the popper will be placed outside\n     * the reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n\n    /**\n     * Modifier used to hide the popper when its reference element is outside of the\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n     * be used to hide with a CSS selector the popper when its reference is\n     * out of boundaries.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * @memberof modifiers\n     * @inner\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n\n    /**\n     * Computes the style that will be applied to the popper element to gets\n     * properly positioned.\n     *\n     * Note that this modifier will not touch the DOM, it just prepares the styles\n     * so that `applyStyle` modifier can apply it. This separation is useful\n     * in case you need to replace `applyStyle` with a custom implementation.\n     *\n     * This modifier has `850` as `order` value to maintain backward compatibility\n     * with previous versions of Popper.js. Expect the modifiers ordering method\n     * to change in future major versions of the library.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n\n      /**\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3D transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties\n       */\n      gpuAcceleration: true,\n\n      /**\n       * @prop {string} [x='bottom']\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n       * Change this if your popper should grow in a direction different from `bottom`\n       */\n      x: 'bottom',\n\n      /**\n       * @prop {string} [x='left']\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n       * Change this if your popper should grow in a direction different from `right`\n       */\n      y: 'right'\n    },\n\n    /**\n     * Applies the computed styles to the popper element.\n     *\n     * All the DOM manipulations are limited to this modifier. This is useful in case\n     * you want to integrate Popper.js inside a framework or view library and you\n     * want to delegate all the DOM manipulations to it.\n     *\n     * Note that if you disable this modifier, you must make sure the popper element\n     * has its position set to `absolute` before Popper.js can do its work!\n     *\n     * Just disable this modifier and define your own to achieve the desired effect.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n\n      /**\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3D transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties\n       */\n      gpuAcceleration: undefined\n    }\n  };\n  /**\n   * The `dataObject` is an object containing all the information used by Popper.js.\n   * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n   * @name dataObject\n   * @property {Object} data.instance The Popper.js instance\n   * @property {String} data.placement Placement applied to popper\n   * @property {String} data.originalPlacement Placement originally defined on init\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.boundaries Offsets of the popper boundaries\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n   */\n\n  /**\n   * Default options provided to Popper.js constructor.<br />\n   * These can be overridden using the `options` argument of Popper.js.<br />\n   * To override an option, simply pass an object with the same\n   * structure of the `options` object, as the 3rd argument. For example:\n   * ```\n   * new Popper(ref, pop, {\n   *   modifiers: {\n   *     preventOverflow: { enabled: false }\n   *   }\n   * })\n   * ```\n   * @type {Object}\n   * @static\n   * @memberof Popper\n   */\n\n  var Defaults = {\n    /**\n     * Popper's placement.\n     * @prop {Popper.placements} placement='bottom'\n     */\n    placement: 'bottom',\n\n    /**\n     * Set this to true if you want popper to position it self in 'fixed' mode\n     * @prop {Boolean} positionFixed=false\n     */\n    positionFixed: false,\n\n    /**\n     * Whether events (resize, scroll) are initially enabled.\n     * @prop {Boolean} eventsEnabled=true\n     */\n    eventsEnabled: true,\n\n    /**\n     * Set to true if you want to automatically remove the popper when\n     * you call the `destroy` method.\n     * @prop {Boolean} removeOnDestroy=false\n     */\n    removeOnDestroy: false,\n\n    /**\n     * Callback called when the popper is created.<br />\n     * By default, it is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onCreate}\n     */\n    onCreate: function onCreate() {},\n\n    /**\n     * Callback called when the popper is updated. This callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.<br />\n     * By default, it is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onUpdate}\n     */\n    onUpdate: function onUpdate() {},\n\n    /**\n     * List of modifiers used to modify the offsets before they are applied to the popper.\n     * They provide most of the functionalities of Popper.js.\n     * @prop {modifiers}\n     */\n    modifiers: modifiers\n  };\n  /**\n   * @callback onCreate\n   * @param {dataObject} data\n   */\n\n  /**\n   * @callback onUpdate\n   * @param {dataObject} data\n   */\n  // Utils\n  // Methods\n\n  var Popper = function () {\n    /**\n     * Creates a new Popper.js instance.\n     * @class Popper\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n     * @param {HTMLElement} popper - The HTML element used as the popper\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n     * @return {Object} instance - The generated Popper.js instance\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n      this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n      this.options = _extends({}, Popper.Defaults, options); // init state\n\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      }; // get reference and popper elements (allow jQuery wrappers)\n\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      }); // Refactoring modifiers' list (Object => Array)\n\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      }) // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      }); // fire the first update to position the popper in the right place\n\n      this.update();\n      var eventsEnabled = this.options.eventsEnabled;\n\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n\n      this.state.eventsEnabled = eventsEnabled;\n    } // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n      /**\n       * Schedules an update. It will run on the next UI update available.\n       * @method scheduleUpdate\n       * @memberof Popper\n       */\n\n      /**\n       * Collection of utilities useful when writing custom modifiers.\n       * Starting from version 1.7, this method is available only if you\n       * include `popper-utils.js` before `popper.js`.\n       *\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\n       * and will be removed in v2! Use the PopperUtils module directly instead.\n       * Due to the high instability of the methods contained in Utils, we can't\n       * guarantee them to follow semver. Use them at your own risk!\n       * @static\n       * @private\n       * @type {Object}\n       * @deprecated since version 1.8\n       * @member Utils\n       * @memberof Popper\n       */\n\n    }]);\n    return Popper;\n  }();\n  /**\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\n   * and lets you use it as replacement of a real DOM node.<br />\n   * You can use this method to position a popper relatively to a set of coordinates\n   * in case you don't have a DOM node to use as reference.\n   *\n   * ```\n   * new Popper(referenceObject, popperNode);\n   * ```\n   *\n   * NB: This feature isn't supported in Internet Explorer 10.\n   * @name referenceObject\n   * @property {Function} data.getBoundingClientRect\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n   * @property {number} data.clientWidth\n   * An ES6 getter that will return the width of the virtual reference element.\n   * @property {number} data.clientHeight\n   * An ES6 getter that will return the height of the virtual reference element.\n   */\n\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n  return Popper;\n});","map":{"version":3,"sources":["/media/fission/Fission/React/React-basic-module/react-bootstap-configuration/node_modules/mdbootstrap/js/popper.js"],"names":["global","factory","exports","module","define","amd","window","Popper","isBrowser","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","_this","requestAnimationFrame","bind","jquery","update$$1","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","PopperUtils"],"mappings":"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,IAA4B2B,cAAc,GAAGrO,MAAM,CAAC2C,OAAO,GAAG,OAAH,GAAa,QAArB,CAAT,GAA0C,CAApF,CAAnC;AAEAe,IAAAA,IAAI,CAAC/C,SAAL,GAAiBwB,oBAAoB,CAACxB,SAAD,CAArC;AACA+C,IAAAA,IAAI,CAAC5F,OAAL,CAAakC,MAAb,GAAsBnC,aAAa,CAACmC,MAAD,CAAnC;AAEA,WAAO0D,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAID,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEsK,IAAAA,KAAK,EAAE;AACL;AACAtU,MAAAA,KAAK,EAAE,GAFF;;AAGL;AACAwK,MAAAA,OAAO,EAAE,IAJJ;;AAKL;AACA5N,MAAAA,EAAE,EAAE0X;AANC,KATO;;AAkBd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACErO,IAAAA,MAAM,EAAE;AACN;AACAjG,MAAAA,KAAK,EAAE,GAFD;;AAGN;AACAwK,MAAAA,OAAO,EAAE,IAJH;;AAKN;AACA5N,MAAAA,EAAE,EAAEqJ,MANE;;AAON;AACJ;AACA;AACIA,MAAAA,MAAM,EAAE;AAVF,KAxDM;;AAqEd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE6N,IAAAA,eAAe,EAAE;AACf;AACA9T,MAAAA,KAAK,EAAE,GAFQ;;AAGf;AACAwK,MAAAA,OAAO,EAAE,IAJM;;AAKf;AACA5N,MAAAA,EAAE,EAAEkX,eANW;;AAOf;AACJ;AACA;AACA;AACA;AACII,MAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAZK;;AAaf;AACJ;AACA;AACA;AACA;AACA;AACIzN,MAAAA,OAAO,EAAE,CAnBM;;AAoBf;AACJ;AACA;AACA;AACA;AACIC,MAAAA,iBAAiB,EAAE;AAzBJ,KAtFH;;AAkHd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEkM,IAAAA,YAAY,EAAE;AACZ;AACA5S,MAAAA,KAAK,EAAE,GAFK;;AAGZ;AACAwK,MAAAA,OAAO,EAAE,IAJG;;AAKZ;AACA5N,MAAAA,EAAE,EAAEgW;AANQ,KA3HA;;AAoId;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE9C,IAAAA,KAAK,EAAE;AACL;AACA9P,MAAAA,KAAK,EAAE,GAFF;;AAGL;AACAwK,MAAAA,OAAO,EAAE,IAJJ;;AAKL;AACA5N,MAAAA,EAAE,EAAEkT,KANC;;AAOL;AACAlS,MAAAA,OAAO,EAAE;AARJ,KA9IO;;AAyJd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEoN,IAAAA,IAAI,EAAE;AACJ;AACAhL,MAAAA,KAAK,EAAE,GAFH;;AAGJ;AACAwK,MAAAA,OAAO,EAAE,IAJL;;AAKJ;AACA5N,MAAAA,EAAE,EAAEoO,IANA;;AAOJ;AACJ;AACA;AACA;AACA;AACA;AACIiH,MAAAA,QAAQ,EAAE,MAbN;;AAcJ;AACJ;AACA;AACA;AACIxL,MAAAA,OAAO,EAAE,CAlBL;;AAmBJ;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,iBAAiB,EAAE;AAzBf,KApKQ;;AAgMd;AACF;AACA;AACA;AACA;AACA;AACA;AACEiO,IAAAA,KAAK,EAAE;AACL;AACA3U,MAAAA,KAAK,EAAE,GAFF;;AAGL;AACAwK,MAAAA,OAAO,EAAE,KAJJ;;AAKL;AACA5N,MAAAA,EAAE,EAAE+X;AANC,KAvMO;;AAgNd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,IAAAA,IAAI,EAAE;AACJ;AACAzU,MAAAA,KAAK,EAAE,GAFH;;AAGJ;AACAwK,MAAAA,OAAO,EAAE,IAJL;;AAKJ;AACA5N,MAAAA,EAAE,EAAE6X;AANA,KA1NQ;;AAmOd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEnF,IAAAA,YAAY,EAAE;AACZ;AACAtP,MAAAA,KAAK,EAAE,GAFK;;AAGZ;AACAwK,MAAAA,OAAO,EAAE,IAJG;;AAKZ;AACA5N,MAAAA,EAAE,EAAE0S,YANQ;;AAOZ;AACJ;AACA;AACA;AACA;AACIE,MAAAA,eAAe,EAAE,IAZL;;AAaZ;AACJ;AACA;AACA;AACA;AACIlH,MAAAA,CAAC,EAAE,QAlBS;;AAmBZ;AACJ;AACA;AACA;AACA;AACIE,MAAAA,CAAC,EAAE;AAxBS,KAlPA;;AA6Qd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE0F,IAAAA,UAAU,EAAE;AACV;AACAlO,MAAAA,KAAK,EAAE,GAFG;;AAGV;AACAwK,MAAAA,OAAO,EAAE,IAJC;;AAKV;AACA5N,MAAAA,EAAE,EAAEsR,UANM;;AAOV;AACA2G,MAAAA,MAAM,EAAEzG,gBARE;;AASV;AACJ;AACA;AACA;AACA;AACA;AACIoB,MAAAA,eAAe,EAAExO;AAfP;AA5RE,GAAhB;AA+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI8T,QAAQ,GAAG;AACb;AACF;AACA;AACA;AACE5N,IAAAA,SAAS,EAAE,QALE;;AAOb;AACF;AACA;AACA;AACE6D,IAAAA,aAAa,EAAE,KAXF;;AAab;AACF;AACA;AACA;AACEqC,IAAAA,aAAa,EAAE,IAjBF;;AAmBb;AACF;AACA;AACA;AACA;AACEd,IAAAA,eAAe,EAAE,KAxBJ;;AA0Bb;AACF;AACA;AACA;AACA;AACA;AACElB,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAA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","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.7\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(window.Popper = factory());\n}(this, (function () { 'use strict';\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nreturn Popper;\n\n})));"]},"metadata":{},"sourceType":"script"}